# Copyright 2020 The Lynx Authors. All rights reserved.

config("gtest_private_config") {
  visibility = [":*"]
  include_dirs = [ "googletest", "." ]
}

config("gtest_config") {
  include_dirs = [ "googletest/include" ]
}

static_library("gtest") {
  testonly = true

  public = [
    "googletest/include/gtest/gtest-spi.h",
    "googletest/include/gtest/gtest.h",
  ]

  sources = [
    "googletest/include/gtest/gtest-matchers.h",
    "googletest/include/gtest/gtest-death-test.h",
    "googletest/include/gtest/gtest-spi.h",
    "googletest/include/gtest/internal/gtest-string.h",
    "googletest/include/gtest/internal/gtest-death-test-internal.h",
    "googletest/include/gtest/internal/gtest-port.h",
    "googletest/include/gtest/internal/gtest-port-arch.h",
    "googletest/include/gtest/internal/gtest-internal.h",
    "googletest/include/gtest/internal/gtest-param-util.h",
    "googletest/include/gtest/internal/gtest-type-util.h",
    "googletest/include/gtest/internal/gtest-filepath.h",
    "googletest/include/gtest/internal/custom/gtest-port.h",
    "googletest/include/gtest/internal/custom/gtest.h",
    "googletest/include/gtest/internal/custom/gtest-printers.h",
    "googletest/include/gtest/gtest-message.h",
    "googletest/include/gtest/gtest-param-test.h",
    "googletest/include/gtest/gtest-typed-test.h",
    "googletest/include/gtest/gtest_pred_impl.h",
    "googletest/include/gtest/gtest_prod.h",
    "googletest/include/gtest/gtest-test-part.h",
    "googletest/include/gtest/gtest.h",
    "googletest/include/gtest/gtest-printers.h",
    "googletest/src/gtest-test-part.cc",
    "googletest/src/gtest.cc",
    "googletest/src/gtest_main.cc",
    "googletest/src/gtest-internal-inl.h",
    "googletest/src/gtest-death-test.cc",
    "googletest/src/gtest-port.cc",
    "googletest/src/gtest-printers.cc",
    "googletest/src/gtest-typed-test.cc",
    "googletest/src/gtest-all.cc",
    "googletest/src/gtest-filepath.cc",
    "googletest/src/gtest-matchers.cc",
  ]
  sources -= [ "googletest/src/gtest-all.cc" ]

  all_dependent_configs = [ ":gtest_config" ]
  configs += [ ":gtest_private_config" ]
}

source_set("gtest_main") {
  testonly = true
  sources = [
    "googletest/src/gtest-all.cc",
  ]
  deps = [
    ":gtest",
  ]
  configs += [ ":gtest_private_config" ]
}

config("gmock_private_config") {
  visibility = [":*"]
  include_dirs = [ "googlemock", "."]
}

config("gmock_config") {
  include_dirs = [ "googlemock/include" ]
}


static_library("gmock") {
  testonly = true

  public = [
    "googletest/include/gmock/gmock.h",
  ]

  sources = [
    "googlemock/include/gmock/gmock-matchers.h",
    "googlemock/include/gmock/gmock-generated-actions.h",
    "googlemock/include/gmock/internal/gmock-port.h",
    "googlemock/include/gmock/internal/gmock-internal-utils.h",
    "googlemock/include/gmock/internal/gmock-pp.h",
    "googlemock/include/gmock/internal/custom/gmock-port.h",
    "googlemock/include/gmock/internal/custom/gmock-matchers.h",
    "googlemock/include/gmock/internal/custom/gmock-generated-actions.h",
    "googlemock/include/gmock/gmock-function-mocker.h",
    "googlemock/include/gmock/gmock-more-matchers.h",
    "googlemock/include/gmock/gmock-cardinalities.h",
    "googlemock/include/gmock/gmock-spec-builders.h",
    "googlemock/include/gmock/gmock-nice-strict.h",
    "googlemock/include/gmock/gmock.h",
    "googlemock/include/gmock/gmock-actions.h",
    "googlemock/src/gmock-internal-utils.cc",
    "googlemock/src/gmock-cardinalities.cc",
    "googlemock/src/gmock_main.cc",
    "googlemock/src/gmock-matchers.cc",
    "googlemock/src/gmock-all.cc",
    "googlemock/src/gmock-spec-builders.cc",
    "googlemock/src/gmock.cc",
  ]
  sources -= [ "googlemock/src/gmock-all.cc" ]

  all_dependent_configs = [ ":gmock_config" ]
  configs += [ ":gmock_private_config" ]

  deps = [ ":gtest" ]
}

static_library("gmock_main") {
  testonly = true
  sources = [
    "googlemock/src/gmock-all.cc",
  ]
  configs += [ ":gmock_private_config" ]
  deps = [
    ":gmock",
  ]
}